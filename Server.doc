RACC server administration


:: Supported software platforms

RACC should be able to run both on Win32 listen servers and dedicated servers.
It also has the ability to run together with Metamod, it has been reported to
run inside Botmixer, and under control of AdminMod as well.
Your Half-Life engine must be up to date to run RACC. The current version of
the Half-Life engine is 1.1.1.0. If this is not your version, download an
upgrade package from:
   http://www.planethalflife.com/files/
The RACC template currently only supports the game Counter-Strike as a MOD of
Half-Life by Valve Software.


:: Getting RACC to work together with Metamod

RACC can work together with Metamod version 1.13.0 and higher without problem.
If you are willing to run RACC together with Metamod, you have to install RACC
*AFTER* Metamod is installed and set up properly. Installing Metamod after RACC
won't work. Trying to load RACC as a metamod plugin won't work either. RACC has
the ability to detect if the Metamod DLL is present, and if it is, it will load
it instead of the game DLL. This is why the RACC DLL has to be specified in the
liblist.gam file as the DLL the engine will load, instead of the Metamod DLL.
i.e, in the liblist.gam file, instead of:
   gamedll "addons/metamod/dlls/metamod.dll"
you must have:
   gamedll "../racc/release/your_mod/release/racc.dll"


:: RACC configuration files and CVARs

No special configuration file is needed apart from the personalities folders
in the 'profiles' subdirectory that contains the bot personality data.
This directory structure allows you to define different personalities for the
bots. This involves the bot's name (given according to the folder's name), the
bitmap logo it will spray (NOTE: this feature is not reimplemented yet), the
language it will speak in (the .txt chat files), its HAL brain (if it doesn't
exist, a new one will be inferred), and its preferred model and skill level
(specified in the profile.cfg file).
You can add as much personalized profiles you want or change the existing ones
to suit your tastes.

Several CVARs allow you to dynamically set the most important game
characteristics about the bots. You can save yourself from manually setting
them up from the console by adding them together with their values to any of
your autoexec files (listenserver.cfg, server.cfg or whatever file that is
parsed at server startup). Below are the CVARs you can use and a brief
description of what they do.

   racc_minbots [0...32] - Sets the minimum number of bots in the game
   racc_maxbots [0...32] - Sets the maximum number of bots in the game
   racc_botmanager [0, 1] - Enables/disables automatic filling of player slots
   racc_botforceteam [0...2] - Forces the bots to select the specified team ID
   racc_internetmode [0, 1] - Enables/disables online traffic mode
   racc_chatmode [0, 1] - Enables/disables both bot text chat and audio chat
   racc_voicechatmode [0, 1] - Enables/disables bot voice chat (talking)


:: RACC server commands

RACC server commands all start with the "racc" keyword. To obtain help, for
example, just type "racc help". There is no syntax difference between a listen
server command and a dedicated server one. Below are the server commands you
can use to control and monitor the bots during the game.

   racc help - Displays the RACC command-line help
   racc add - Make a bot connect and join the current game
   racc kick - Make a bot disconnect from the current game
   racc kickall - Make all bots disconnect from the current game
   racc killall - Instantly kill all bots in the current game
   racc viewprofiles - Displays the profiles of the currently playing bots
   racc viewallprofiles - Displays the profiles of all the loaded bots
   racc botcount - Displays the total number of bots currently playing
   racc playercount - Displays the total number of clients (bots included)
   racc time - Displays the current map play time
   racc msec - [DEVELOPERS ONLY] change the msec calculation method (1-4)


:: Server population and team management

As for listen servers, there is no need to manually add bots to a dedicated
server. They should join automatically within the first minutes of server
uptime and fill up all player slots less one, without disturbing normal clients
connections: as soon as a real player joins, a bot leaves. And on the contrary,
as soon as a real player leaves, a bot joins the game within a delay below the
minute, so as to simulate online frequentation if the "racc_internetmode" CVAR
is set to 1.

To force a specific team selection for incoming bots, use the racc_botforceteam
CVAR. If this CVAR is set to 0, the bots will be auto-assigned a team. If this
CVAR is set to 1, 2, 3 or 4 the bots will join the team corresponding to this
number. E.g, for Counter-Strike, the Terrorist team has the ID #1 whereas the
Counter-Terrorist team has the ID #2. For Team Fortress Classic, the Blue, Red,
Yellow and Green team correspond respectively to the numbers 1, 2, 3 and 4.
Using this CVAR together with the racc_maxbots CVAR, you can make bots fill up
the half of your server in one complete team. For example, to fill up all the
Terrorist slots with bots in Counter-Strike and let the Counter-Terrorist slots
available for real players, on a 16 player server you would use:
   racc_botforceteam 1
   racc_maxbots 8
Another solution would be to disable racc_internetmode and manually add the
bots for a specific team from the server console. However those CVARs have beed
added for your convenience, so you may prefer using them instead.


:: Server failure eventuality

In case of server failure, if you believe it's related with RACC, please report
it to the author with as much details as possible about the state of the game
when the event occured.
